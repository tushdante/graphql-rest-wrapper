schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.2", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @join__field(graph: join__Graph!, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type Author
  @join__type(graph: AUTHORS, key: "id")
  @join__type(graph: POSTS, key: "id")
{
  id: ID!
  name: String! @join__field(graph: AUTHORS)
  posts: [Post] @join__field(graph: POSTS)
}

scalar join__FieldSet

enum join__Graph {
  AUTHORS @join__graph(name: "authors", url: "http://localhost:4001")
  POSTS @join__graph(name: "posts", url: "http://localhost:4002")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Mutation
  @join__type(graph: POSTS)
{
  addPost(authorID: ID!, content: String, title: String): Post
}

type Post
  @join__type(graph: POSTS, key: "id")
{
  id: ID!
  author: Author!
  content: String!
  publishedAt: String!
  title: String!
}

type Query
  @join__type(graph: AUTHORS)
  @join__type(graph: POSTS)
{
  author(id: ID!): Author @join__field(graph: AUTHORS)
  authors: [Author] @join__field(graph: AUTHORS)
  post(id: ID!): Post @join__field(graph: POSTS)
  posts: [Post] @join__field(graph: POSTS)
}